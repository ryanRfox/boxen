#pragma version 8
intcblock 0 1 64
bytecblock 0x6d656d626572736869705f746f6b656e 0x 0x00 0x151f7c75 0x61666669726d6174696f6e73
txn NumAppArgs
intc_0 // 0
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x54d2d66d // "bootstrap(pay,string)uint64"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x92ebf6de // "remove_member(address)void"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0xdce35138 // "add_member(account,asset)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x642adb59 // "update_role(account,uint8)void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xc8d0d243 // "get_membership_record(address)(uint8,bool)"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0x35128a99 // "set_affirmation(uint16,byte[64],asset)void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xd11a5d4f // "get_affirmation(asset)byte[64]"
==
bnz main_l9
err
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub getaffirmation_12
store 21
bytec_3 // 0x151f7c75
load 21
concat
log
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
extract_uint16
store 18
txna ApplicationArgs 2
store 19
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 20
load 18
load 19
load 20
callsub setaffirmation_10
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub getmembershiprecord_8
store 17
bytec_3 // 0x151f7c75
load 17
concat
log
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 15
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 16
load 15
load 16
callsub updaterole_7
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 13
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 14
load 13
load 14
callsub addmember_5
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub removemember_3
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 11
txn GroupIndex
intc_1 // 1
-
store 10
load 10
gtxns TypeEnum
intc_1 // pay
==
assert
load 10
load 11
callsub bootstrap_1
store 12
bytec_3 // 0x151f7c75
load 12
itob
concat
log
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l18
err
main_l18:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// auth_only
authonly_0:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// bootstrap
bootstrap_1:
proto 2 1
intc_0 // 0
txn Sender
callsub authonly_0
// unauthorized
assert
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
// payment must be to app address
assert
frame_dig -2
gtxns Amount
pushint 3658500 // 3658500
>=
// payment must be for >= 3658500
assert
bytec 4 // "affirmations"
pushint 640 // 640
box_create
pop
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig -1
extract 2 0
itxn_field ConfigAssetName
pushint 1000 // 1000
itxn_field ConfigAssetTotal
intc_1 // 1
itxn_field ConfigAssetDefaultFrozen
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
intc_0 // 0
itxn_field Fee
itxn_submit
intc_0 // 0
bytec_0 // "membership_token"
app_global_get_ex
store 1
store 0
load 1
!
assert
bytec_0 // "membership_token"
itxn CreatedAssetID
app_global_put
bytec_0 // "membership_token"
app_global_get
frame_bury 0
retsub

// auth_only
authonly_2:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// remove_member
removemember_3:
proto 1 0
txn Sender
callsub authonly_2
// unauthorized
assert
frame_dig -1
box_del
pop
retsub

// auth_only
authonly_4:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// add_member
addmember_5:
proto 2 0
intc_0 // 0
dup
bytec_1 // ""
intc_0 // 0
dup
bytec_1 // ""
dup
txn Sender
callsub authonly_4
// unauthorized
assert
intc_0 // 0
frame_bury 0
frame_dig 0
pushint 256 // 256
<
assert
intc_0 // 0
!
!
frame_bury 1
bytec_2 // 0x00
intc_0 // 0
frame_dig 0
setbyte
bytec_2 // 0x00
intc_0 // 0
frame_dig 1
setbit
concat
frame_bury 2
frame_dig -2
txnas Accounts
box_del
pop
frame_dig -2
txnas Accounts
frame_dig 2
box_put
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
bytec_0 // "membership_token"
app_global_get
itxn_field XferAsset
intc_1 // 1
itxn_field AssetAmount
frame_dig -2
txnas Accounts
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
global CurrentApplicationAddress
itxn_field AssetSender
itxn_submit
retsub

// auth_only
authonly_6:
proto 1 1
frame_dig -1
global CreatorAddress
==
retsub

// update_role
updaterole_7:
proto 2 0
bytec_1 // ""
intc_0 // 0
dupn 2
bytec_1 // ""
dup
txn Sender
callsub authonly_6
// unauthorized
assert
frame_dig -2
txnas Accounts
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 0
frame_dig 0
pushint 8 // 8
getbit
frame_bury 1
bytec_2 // 0x00
intc_0 // 0
frame_dig -1
setbyte
bytec_2 // 0x00
intc_0 // 0
frame_dig 1
setbit
concat
frame_bury 0
frame_dig -2
txnas Accounts
box_del
pop
frame_dig -2
txnas Accounts
frame_dig 0
box_put
retsub

// get_membership_record
getmembershiprecord_8:
proto 1 1
bytec_1 // ""
frame_dig -1
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 0
retsub

// auth_holds_token
authholdstoken_9:
proto 1 1
frame_dig -1
bytec_0 // "membership_token"
app_global_get
asset_holding_get AssetBalance
store 7
store 6
load 7
load 6
intc_0 // 0
>
&&
retsub

// set_affirmation
setaffirmation_10:
proto 3 0
txn Sender
callsub authholdstoken_9
// unauthorized
assert
bytec 4 // "affirmations"
intc_2 // 64
frame_dig -3
*
frame_dig -2
box_replace
retsub

// auth_holds_token
authholdstoken_11:
proto 1 1
frame_dig -1
bytec_0 // "membership_token"
app_global_get
asset_holding_get AssetBalance
store 9
store 8
load 9
load 8
intc_0 // 0
>
&&
retsub

// get_affirmation
getaffirmation_12:
proto 1 1
bytec_1 // ""
txn Sender
callsub authholdstoken_11
// unauthorized
assert
bytec 4 // "affirmations"
intc_2 // 64
global Round
pushint 10 // 10
%
*
intc_2 // 64
box_extract
frame_bury 0
intc_2 // 64
frame_dig 0
len
==
assert
retsub